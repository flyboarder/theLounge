(ns lounge.forms
  (:require [semantic-ui.core :as semui]
            [semantic-ui.views.card :as semcard]
            [semantic-ui.elements.button :as sembtn]
            [semantic-ui.elements.container :as semcont]
            [semantic-ui.elements.divider :as semdiv]
            [semantic-ui.elements.header :as semhdr]
            [semantic-ui.elements.image :as semimg]
            [semantic-ui.elements.input :as seminpt]
            [semantic-ui.elements.list :as semlist]
            [semantic-ui.elements.step :as semsteps]
            [semantic-ui.elements.segment :as semseg]
            [semantic-ui.collections.menu :as semmenu]
            [semantic-ui.collections.form :as semfrm]
            [semantic-ui.collections.grid :as semgrid]
            [semantic-ui.modules.modal :as modal]
            [semantic-ui.modules.popup]
            [semantic-ui.modules.progress :as semprog]
            [semantic-ui.views.item :as semitm]
            [lounge.firebase :as fb]
            [lounge.user :as user]
            [lounge.tenant :as tenant]
            [lounge.directory :as dir]
            [lounge.route :as route]
            [lounge.ui :as ui]
            [lounge.notifications :as notify]
            [clojure.string :as s])
  (:require-macros [lounge.forms :refer [defv defv= deferr deferr=]])
  )

(defelem icon-text-input [attr kids]
  (seminpt/icon-input
    :class [:left]
    (i :class (into (:icon attr) [:icon]))
    (hoplon.core/input
      attr
      :type "text"
      :popup {:on "hover"}
      kids)))

(defelem user-name [attr kids]
  (semfrm/required-field
    (label "Full Name")
    (icon-text-input
      attr
      :icon [:user]
      :placeholder "Full Name"
      :data-content "Please enter your full name."
      :change #(user/assoc-user! :name @%)
      :value (cell= (:name user/user)
      kids))))

(defelem user-email [attr kids]
  (semfrm/required-field
    (label "Email")
    (icon-text-input
      attr
      :icon [:mail]
      :placeholder "Email"
      :data-content "Please enter your email address."
      :change #(user/assoc-user! :email @%)
      :value (cell= (:email user/user))
      kids)))

(defelem user-phone [attr kids]
  (semfrm/required-field
    (label "Phone Number")
    (icon-text-input
      attr
      :icon [:phone]
      :placeholder "Phone Number"
      :data-content "Please enter a number we can reach you at."
      :change #(user/assoc-user! :phone @%)
      :value (cell= (:phone user/user))
      kids)))

(defelem user-info [attr kids]
  (semfrm/form
    attr
    (ui/segment
      (user-name)
      (user-email)
      (user-phone)
      kids)))
